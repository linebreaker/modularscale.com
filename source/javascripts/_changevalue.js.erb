function getBase() {
  msBase = [];
  var bases = document.getElementsByClassName('base');
  for (var i = 0; i < bases.length; i++) {
    v = ('0' + bases[i].value).match(/^(\d+(?:\.\d+)?)(.*)$/);
    if (v[1] > 0) {
      msBase.push(v[1].slice(1));
    } else {
      msError = 'Your base must be greater than 0';
    }
    if (msUnit == null) {
      msUnit = v[2];
    }
  }

  return msBase;
};

function baseOrder() {
  var base = getBase();
  var order = [];
  // Normalize bases
  // Find the upper bounds for base values
  var baseHigh = Math.pow(msRatio,1) * base[0];
  for (var i = 1; i < base.length; i++) {
    // shift up if value too low
    while (base[i] < base[0]) {
      base[i] = Math.pow(msRatio,1) * base[i];
    }
    // Shift down if too high
    while (base[i] >= baseHigh) {
      base[i] = Math.pow(msRatio,-1) * base[i];
    }
  }
  var sBase = base.concat().sort();
  for (var i = 0; i < base.length; i++) {
    order.push(sBase.indexOf(base[i]));
  }
  return order;
};

function keyStep(e,k) {
  var thisValue = e.value.match(/^(\d+(?:\.\d+)?)(.*)$/);
  var step = 10;
  if (window.event.altKey) {
    step = 1;
  }
  if (window.event.shiftKey) {
    step = 100;
  }
  if (k == 38) {
    e.value = ((thisValue[1]-0) * 10 + step) / 10 + thisValue[2];
  } else if (k == 40) {
    if (thisValue[1] > 1) {
    e.value = ((thisValue[1]-0) * 10 - step) / 10 + thisValue[2];
    }
  }
}

function changeBase(e,k) {

  msBase = [];
  msUnit = null;
  var msError = false;

  // Change the base with arrow keys
  if (e != null) {
    keyStep(e,k);
  }
  getBase();
  if (msError == false) {
    msPage(msBase, msUnit, msRatio);
    error(msError);
  } else {
    error(msError);
  }

  codeMode(mode);
}

function changeRatio(e,k) {

  msRatio = [];
  msError = false;

  // Change the base with arrow keys
  if (e != null) {
    keyStep(e,k);
  }

  var r = document.getElementById('ratio').value;
  if (isNaN(r/1)) {
    r = r.split('@');
    if (r[1] != '') {
      if (msBase.length > 1) {
        var b = msBase[Math.round(((r[1]/msBase.length) - Math.floor(r[1]/msBase.length))*msBase.length)];
        r = Math.pow((r[0]/b),(1/Math.floor(r[1]/msBase.length)));
      } else {
        r = Math.pow((r[0]/msBase),(1/r[1]));
      }
      error(null);
    } else {
      msError = 'Your ratio needs to be greater than 1 or be formatted <em>n</em>@<em>n</em>';
    }
  } if (r <= 1) {
    msError = 'Your ratio needs to be greater than 1';
  } else {
    msRatio = r;
    msPage(msBase, msUnit, msRatio);
    codeMode(mode);
  }
  error(msError);
}
