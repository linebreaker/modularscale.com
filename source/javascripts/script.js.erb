//= require '_typekit.js.erb'
//= require '_mixpanel.js.erb'
//= require '_ms.js.erb'
//= require '_util.js.erb'
//= require '_changevalue.js.erb'
//= require '_panels.js.erb'
//= require '_form.js.erb'
//= require '_code.js.erb'
//= require '_error.js.erb'
//= require '_url.js.erb'
//= require '_help.js.erb'

// Vars
var mode = 'web';
var panel = 'form';
var outputMode = 'text';
var msBase = 1;
var msUnit = 'em';
var msRatio = 1.5;
var multiLimit = 3;
var msError = false;
var msPrecision = 1000;

// Get URL configuration
queryURL();

//
function stepUnits(u, msBase, msUnit, msRatio) {
  var step = (Math.round((ms(u,{base: msBase,ratio: msRatio}))*msPrecision)/msPrecision);

  var output = (
    step+msUnit
    );

  if (msBase[0] != 1 || msUnit != 'em') {
    output = output + '</span><span>' +
    Math.round(step/msBase[0]*msPrecision)/msPrecision+'em';
  }

  if (msUnit === 'px') {
    output = output + '</span><span class="at16">' +
    Math.round(step/16*msPrecision)/msPrecision+'<a href="http://nicewebtype.com/notes/2012/07/19/leave-default-font-size-alone-and-embrace-the-em/" title="What is ems @ 16?">em @ 16</a>';
  }

  return '<span>' + output + '</span>';
}

function msPage(msBase, msUnit, msRatio) {

  // upper bound of scale
  var u = 16;
  // lower bound of scale
  var l = -6;

  rMsUnit = msUnit;
  rMsBase = msBase;

  // This is a fix for ems not rendering smaller than a certan size.
  // This converts ems to px and allows the text to deisplay appropriately small.
  if (msUnit == 'em' || msUnit == 'rem') {
    rMsUnit = 'px';
    rMsBase = [];
    for (var i = 0; i < msBase.length; i++)
      rMsBase.push(msBase[i]*16);
  }


  while (u >= l) {

    var step = ms(u,{base: rMsBase,ratio: msRatio});
    var p = baseOrder();
    var pl = p.length;

    if (u >= 0) {
      document.getElementById('m'+u+'value').innerHTML=stepUnits(u, msBase, msUnit, msRatio);
      document.getElementById('text_m'+Math.abs(u)).setAttribute('class', 's' +
        p[Math.round(((u/(pl)) - Math.floor(u/(pl))) * (pl))]
        + ' text');
      document.getElementById('text_m'+u).style.fontSize=(step+rMsUnit);
    } else {
      document.getElementById('mn'+Math.abs(u)+'value').innerHTML=stepUnits(u, msBase, msUnit, msRatio);
      document.getElementById('text_mn'+Math.abs(u)).setAttribute('class', 's'+
        p[Math.round(((u/(pl)) - Math.floor(u/(pl))) * (pl))]
        +' text');
      document.getElementById('text_mn'+Math.abs(u)).style.fontSize=(step+rMsUnit);
    }

    u--;
  }

  document.getElementById('text_m0').scrollIntoView(false);
  newURL();

  error(msError);
  codeMode(mode);

  // Analytics
  mixpanel.track('scale', {
    'Units'        : msUnit,
    'Bases'        : msBase.length,
    'Ratios'       : msRatio.length,
    'Base values'  : msBase,
    'Ratio values' : msRatio
  });
}

document.addEventListener('DOMContentLoaded', function(){
  document.getElementById('text_m0').scrollIntoView(false);
});


// If iOS web app
if (window.navigator.standalone && ( navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false )) {
  document.body.classList.add('ios-webapp');
}